---
title: "Atributos e Métodos de Classe"
title-slide-attributes:
  data-background-image: ../../assets/img/brasao_ufrn_positivo.png
  data-background-size: "50%, auto, contain"
  data-background-opacity: "0.05"
---

## Objetivo

Apresentar atributos e métodos de classe:

- Utilidade
- Sintaxe em Python

---

## Atributos e Métodos de Classe

- Frequentemente, é desejável ter atributos/métodos que são "globais",
  ou seja, que não dizem respeito a uma instância específica de uma classe
- Por exemplo:
  - O endereço IP de um servidor de banco de dados
  - As possíveis `cores` de um `Carro`
  - A quantidade de instâncias criadas de uma classe

---

## Atributos e Métodos de Instância vs. Atributos e Métodos de Classe

Até então, todos os atributos e métodos vistos são **de instância**:

- Dizem respeito a uma instância/objeto específico daquela classe
- São comumente chamados de atributos/métodos (a parte *de instância* do nome
  *atributo de instância* é implícita)

---

## Atributos e Métodos de Instância vs. Atributos e Métodos de Classe

- Atributos e métodos de classe dizem respeito à classe, e não
  a um objeto específico daquela classe
  - Também chamados de *atributos/métodos estáticos*
  - Não precisam de uma instância da classe para serem utilizados
- Úteis para compartilhar informações entre todos os objetos de uma mesma
  classe

---

## UML: Atributos e Métodos de Classe {.nostretch}

![](img/classe_pessoa_static.png){width=40% fig-align="center"}

Notação UML: texto sublinhado indica métodos e atributos de classe (estáticos)
---

## Como Funciona na Prática

[09-Membros-Static](09-Membros-Static.ipynb)